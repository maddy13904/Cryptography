#include <stdio.h>
#include <stdlib.h>
#include <string.h>
#include <time.h>
#define MOD 26
void generate_key(int key[], int length) {
	int i;
    srand(time(0));
    for (i = 0; i < length; i++) {
        key[i] = rand() % MOD;
    }
}
void encrypt(char plaintext[], int key[], char ciphertext[]) {
    int i;
    for (i = 0; plaintext[i] != '\0'; i++) {
        if (plaintext[i] >= 'a' && plaintext[i] <= 'z') {
            ciphertext[i] = ((plaintext[i] - 'a' + key[i]) % MOD) + 'a';
        } else if (plaintext[i] >= 'A' && plaintext[i] <= 'Z') {
            ciphertext[i] = ((plaintext[i] - 'A' + key[i]) % MOD) + 'A';
        } else {
            ciphertext[i] = plaintext[i];
        }
    }
    ciphertext[i] = '\0';
}
void decrypt(char ciphertext[], int key[], char plaintext[]) {
    int i;
    for (i = 0; ciphertext[i] != '\0'; i++) {
        if (ciphertext[i] >= 'a' && ciphertext[i] <= 'z') {
            plaintext[i] = ((ciphertext[i] - 'a' - key[i] + MOD) % MOD) + 'a';
        } else if (ciphertext[i] >= 'A' && ciphertext[i] <= 'Z') {
            plaintext[i] = ((ciphertext[i] - 'A' - key[i] + MOD) % MOD) + 'A';
        } else {
            plaintext[i] = ciphertext[i];
        }
    }
    plaintext[i] = '\0';
}
int main() {
	int i;
    char plaintext[100], ciphertext[100], decryptedtext[100];
    int key[100];
    printf("Enter plaintext: ");
    fgets(plaintext, sizeof(plaintext), stdin);
    plaintext[strcspn(plaintext, "\n")] = '\0';
    int length = strlen(plaintext);
    generate_key(key, length);
    encrypt(plaintext, key, ciphertext);
    decrypt(ciphertext, key, decryptedtext);
    printf("\nGenerated key: ");
    for (i = 0; i < length; i++) {
        if (plaintext[i] >= 'a' && plaintext[i] <= 'z' || plaintext[i] >= 'A' && plaintext[i] <= 'Z')
            printf("%d ", key[i]);
        else
            printf("0 ");
    }
    printf("\nCiphertext: %s", ciphertext);
    printf("\nDecrypted text: %s\n", decryptedtext);
    return 0;
}
